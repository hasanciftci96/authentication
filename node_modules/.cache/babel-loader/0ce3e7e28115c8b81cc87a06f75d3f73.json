{"ast":null,"code":"var _jsxFileName = \"/Users/hasanciftci/authentication-firebase/src/contexts/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { auth } from '../components/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n\n  const [currentUser, setCurrentUser] = useState();\n\n  function signup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  } //returns a promise\n\n\n  useEffect(() => {\n    //3)because we only want to set the user once and that is when the page first loads\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n    }); //1)firebase has its own method to create these users. Yani direk user = { id: 1, name: 'hasan', ...} diye sana bir user olusturuyor\n    //2)dolayisiyla bizim bilgisayara nasil user'i olusturmasini gerektigini soylememize gerek yok\n\n    return unsubscribe; //4)adding a cleaner function because we want to unsubscribe whenever we are done\n  }, []);\n  const value = {\n    currentUser,\n    signup\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(AuthProvider, \"weNTBXcC62DPmZO+PUtwIm8P/FM=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/hasanciftci/authentication-firebase/src/contexts/AuthContext.js"],"names":["React","useContext","useState","useEffect","auth","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","signup","email","password","createUserWithEmailAndPassword","unsubscribe","onAuthStateChanged","user","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,wBAArB;;AAEA,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACtB,SAAON,UAAU,CAACI,WAAD,CAAjB;AACH;;GAFeE,O;;AAIhB,OAAO,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA;;AAEvC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;;AAGA,WAASU,MAAT,CAAgBC,KAAhB,EAAuBC,QAAvB,EAAiC;AAC7B,WAAOV,IAAI,CAACW,8BAAL,CAAoCF,KAApC,EAA2CC,QAA3C,CAAP;AACH,GAPsC,CAOrC;;;AAEFX,EAAAA,SAAS,CAAC,MAAM;AAAE;AACd,UAAMa,WAAW,GAAGZ,IAAI,CAACa,kBAAL,CAAwBC,IAAI,IAAI;AAChDP,MAAAA,cAAc,CAACO,IAAD,CAAd;AACH,KAFmB,CAApB,CADY,CAGT;AACA;;AAEH,WAAOF,WAAP,CANY,CAMO;AACtB,GAPQ,EAON,EAPM,CAAT;AAUA,QAAMG,KAAK,GAAG;AACVT,IAAAA,WADU;AAEVE,IAAAA;AAFU,GAAd;AAKA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEO,KAA7B;AAAA,cACKV;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;IA7BeD,Y;;KAAAA,Y","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\nimport { auth } from '../components/firebase'\n\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n    \n    const [currentUser, setCurrentUser] = useState()\n\n\n    function signup(email, password) {\n        return auth.createUserWithEmailAndPassword(email, password)\n    } //returns a promise\n\n    useEffect(() => { //3)because we only want to set the user once and that is when the page first loads\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user)\n        }) //1)firebase has its own method to create these users. Yani direk user = { id: 1, name: 'hasan', ...} diye sana bir user olusturuyor\n           //2)dolayisiyla bizim bilgisayara nasil user'i olusturmasini gerektigini soylememize gerek yok\n        \n        return unsubscribe //4)adding a cleaner function because we want to unsubscribe whenever we are done\n    }, [])\n\n\n    const value = {\n        currentUser,\n        signup\n    }\n\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}